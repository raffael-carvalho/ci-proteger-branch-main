# .github/workflows/ci.yml
name: Pipeline de CI - Olá Mundo DevOps
# Define quando o pipeline deve rodar
on:
  push: # Rodar em todo push
    branches: ["main"] # Apenas na branch main
  pull_request: # Rodar em todo pull request
    branches: ["main"] # Que tenha como alvo a branch main
# Define os "trabalhos" (jobs) que o pipeline executará
jobs:
  # O nome do nosso job é "test-and-build"
  test-and-build:
    # A máquina virtual que o job usará
    runs-on: ubuntu-latest
    # Os passos (steps) que o job executará em sequência
    steps:
      # 1. Baixa o código do repositório para a máquina virtual
      - name: Checkout do Código
        uses: actions/checkout@v4
      # 2. Configura o ambiente Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22" # Usamos a mesma versão do Dockerfile
          cache: "npm" # Habilita o cache do npm para builds mais rápidos
      # 3. Instala todas as dependências (incluindo devDependencies)
      - name: Instalar Dependências
        run: npm install
      # 4. Executa os testes
      - name: Rodar Testes
        run: npm test
      # 5. Configura o Docker Buildx (necessário para build)
      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3
      # 6. Logar no GitHub Container Registry (GHCR)
      # Este step só roda se for um push na branch main
      - name: Logar no GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Segredo automático do GitHub!

      # 7. Extrair metadados (tags) para o Docker
      # Este step só roda se for um push na branch main
      - name: Extrair Metadados do Docker
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # ghcr.io/SEU_USUARIO/SEU_REPO
          tags: |
            type=sha
            latest

      # 8. Build E PUSH da Imagem Docker
      # Note que este step agora tem um 'if' e usa os 'labels' e 'tags' do step anterior
      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          # Só faz PUSH se for um push na branch main
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          # Usa as tags geradas pelo 'metadata-action'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
